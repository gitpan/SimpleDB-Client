digraph {
graph [overlap=false]
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_LWP_UserAgent {
	label="LWP::UserAgent";
	"LWP::UserAgent::conn_cache";
}
subgraph cluster_LWP_ConnCache {
	label="LWP::ConnCache";
	"LWP::ConnCache::total_capacity";
	"LWP::ConnCache::deposit";
	"LWP::ConnCache::new";
	"LWP::ConnCache::enforce_limits";
	"LWP::ConnCache::withdraw";
	"LWP::ConnCache::get_types";
	"LWP::ConnCache::BEGIN@3";
	"LWP::ConnCache::BEGIN@4";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_LWP_Protocol_http {
	label="LWP::Protocol::http";
	"LWP::Protocol::http::_new_socket";
	"LWP::Protocol::http::request";
}
"LWP::ConnCache::total_capacity" -> "LWP::ConnCache::enforce_limits";
"LWP::ConnCache::deposit" -> "LWP::ConnCache::enforce_limits";
"LWP::UserAgent::conn_cache" -> "LWP::ConnCache::BEGIN@4";
"LWP::Protocol::http::_new_socket" -> "LWP::ConnCache::withdraw";
"LWP::UserAgent::conn_cache" -> "LWP::ConnCache::BEGIN@3";
"LWP::UserAgent::conn_cache" -> "LWP::ConnCache::new";
"LWP::Protocol::http::request" -> "LWP::ConnCache::deposit";
"LWP::ConnCache::enforce_limits" -> "LWP::ConnCache::get_types";
"LWP::ConnCache::BEGIN@4" -> "vars::import";
"LWP::ConnCache::new" -> "LWP::ConnCache::total_capacity";
"LWP::ConnCache::BEGIN@3" -> "strict::import";
}
