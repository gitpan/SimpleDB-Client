digraph {
graph [overlap=false]
subgraph cluster_Moose_Meta_Role_Application_ToRole {
	label="Moose::Meta::Role::Application::ToRole";
	"Moose::Meta::Role::Application::ToRole::meta";
}
subgraph cluster_Moose_Meta_Role_Composite {
	label="Moose::Meta::Role::Composite";
	"Moose::Meta::Role::Composite::meta";
}
subgraph cluster_List_MoreUtils {
	label="List::MoreUtils";
	"List::MoreUtils::all";
	"List::MoreUtils::any";
}
subgraph cluster_Moose_Meta_Role_Application_ToInstance {
	label="Moose::Meta::Role::Application::ToInstance";
	"Moose::Meta::Role::Application::ToInstance::meta";
}
subgraph cluster_vars {
	label="vars";
	"vars::BEGIN@3";
	"vars::BEGIN@8";
	"vars::import";
	"vars::BEGIN@7";
}
subgraph cluster_Moose_Meta_TypeConstraint_Enum {
	label="Moose::Meta::TypeConstraint::Enum";
	"Moose::Meta::TypeConstraint::Enum::meta";
}
subgraph cluster_Class_MOP_Mixin_HasMethods {
	label="Class::MOP::Mixin::HasMethods";
	"Class::MOP::Mixin::HasMethods::add_method";
	"Class::MOP::Mixin::HasMethods::get_method";
}
subgraph cluster_Moose_Meta_Role {
	label="Moose::Meta::Role";
	"Moose::Meta::Role::meta";
}
subgraph cluster_Moose_Util_TypeConstraints {
	label="Moose::Util::TypeConstraints";
	"Moose::Util::TypeConstraints::subtype";
	"Moose::Util::TypeConstraints::_create_type_constraint";
	"Moose::Util::TypeConstraints::find_type_constraint";
}
subgraph cluster_Class_MOP_Method_Inlined {
	label="Class::MOP::Method::Inlined";
	"Class::MOP::Method::Inlined::can_be_inlined";
}
subgraph cluster_Moose {
	label="Moose";
	"Moose::BEGIN@11";
}
subgraph cluster_Sub_Install {
	label="Sub::Install";
	"Sub::Install::_CODELIKE";
}
subgraph cluster_Moose_Meta_TypeConstraint_Parameterized {
	label="Moose::Meta::TypeConstraint::Parameterized";
	"Moose::Meta::TypeConstraint::Parameterized::meta";
}
subgraph cluster_Moose_Meta_Role_Application_RoleSummation {
	label="Moose::Meta::Role::Application::RoleSummation";
	"Moose::Meta::Role::Application::RoleSummation::meta";
}
subgraph cluster_Moose_Meta_Method_Constructor {
	label="Moose::Meta::Method::Constructor";
	"Moose::Meta::Method::Constructor::new";
}
subgraph cluster_Moose_Meta_TypeConstraint_Registry {
	label="Moose::Meta::TypeConstraint::Registry";
	"Moose::Meta::TypeConstraint::Registry::meta";
	"Moose::Meta::TypeConstraint::Registry::add_type_constraint";
}
subgraph cluster_Scalar_Util {
	label="Scalar::Util";
	"Scalar::Util::BEGIN@9";
	"Scalar::Util::refaddr";
	"Scalar::Util::looks_like_number";
	"Scalar::Util::reftype";
	"Scalar::Util::blessed";
	"Scalar::Util::BEGIN@10";
	"Scalar::Util::weaken";
}
subgraph cluster_Moose_Meta_TypeConstraint_Class {
	label="Moose::Meta::TypeConstraint::Class";
	"Moose::Meta::TypeConstraint::Class::meta";
}
subgraph cluster_Class_MOP_Method_Wrapped {
	label="Class::MOP::Method::Wrapped";
	"Class::MOP::Method::Wrapped::wrap";
}
subgraph cluster_Moose_Meta_Class {
	label="Moose::Meta::Class";
	"Moose::Meta::Class::add_attribute";
}
subgraph cluster_Moose_Meta_Method_Destructor {
	label="Moose::Meta::Method::Destructor";
	"Moose::Meta::Method::Destructor::new";
	"Moose::Meta::Method::Destructor::is_needed";
}
subgraph cluster_SimpleDB_Client {
	label="SimpleDB::Client";
	"SimpleDB::Client::new";
}
subgraph cluster_Class_MOP_Mixin {
	label="Class::MOP::Mixin";
	"Class::MOP::Mixin::meta";
}
subgraph cluster_Class_MOP_Method_Accessor {
	label="Class::MOP::Method::Accessor";
	"Class::MOP::Method::Accessor::new";
}
subgraph cluster_Moose_Meta_TypeConstraint_Parameterizable {
	label="Moose::Meta::TypeConstraint::Parameterizable";
	"Moose::Meta::TypeConstraint::Parameterizable::meta";
}
subgraph cluster_Moose_Meta_TypeConstraint_DuckType {
	label="Moose::Meta::TypeConstraint::DuckType";
	"Moose::Meta::TypeConstraint::DuckType::meta";
}
subgraph cluster_Class_MOP_Object {
	label="Class::MOP::Object";
	"Class::MOP::Object::meta";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_Class_MOP_Instance {
	label="Class::MOP::Instance";
	"Class::MOP::Instance::BUILDARGS";
	"Class::MOP::Instance::new";
}
subgraph cluster_Class_MOP_Class {
	label="Class::MOP::Class";
	"Class::MOP::Class::clone_object";
	"Class::MOP::Class::_clone_instance";
}
subgraph cluster_Class_MOP {
	label="Class::MOP";
	"Class::MOP::class_of";
}
subgraph cluster_Class_MOP_Method_Constructor {
	label="Class::MOP::Method::Constructor";
	"Class::MOP::Method::Constructor::new";
	"Class::MOP::Method::Constructor::_generate_slot_initializer";
}
subgraph cluster_Moose_Meta_TypeConstraint_Role {
	label="Moose::Meta::TypeConstraint::Role";
	"Moose::Meta::TypeConstraint::Role::meta";
}
subgraph cluster_Moose_Meta_TypeCoercion_Union {
	label="Moose::Meta::TypeCoercion::Union";
	"Moose::Meta::TypeCoercion::Union::meta";
}
subgraph cluster_Class_MOP_Attribute {
	label="Class::MOP::Attribute";
	"Class::MOP::Attribute::attach_to_class";
}
subgraph cluster_Class_MOP_Package {
	label="Class::MOP::Package";
	"Class::MOP::Package::has_package_symbol";
}
subgraph cluster_Moose_Meta_Role_Method_Required {
	label="Moose::Meta::Role::Method::Required";
	"Moose::Meta::Role::Method::Required::meta";
}
subgraph cluster_Class_MOP_Mixin_HasAttributes {
	label="Class::MOP::Mixin::HasAttributes";
	"Class::MOP::Mixin::HasAttributes::add_attribute";
}
subgraph cluster_Class_MOP_Method {
	label="Class::MOP::Method";
	"Class::MOP::Method::attach_to_class";
	"Class::MOP::Method::wrap";
}
subgraph cluster_Moose_Meta_TypeConstraint {
	label="Moose::Meta::TypeConstraint";
	"Moose::Meta::TypeConstraint::meta";
}
subgraph cluster_Moose_Meta_TypeConstraint_Union {
	label="Moose::Meta::TypeConstraint::Union";
	"Moose::Meta::TypeConstraint::Union::meta";
}
subgraph cluster_Moose_Meta_TypeCoercion {
	label="Moose::Meta::TypeCoercion";
	"Moose::Meta::TypeCoercion::meta";
}
subgraph cluster_Moose_Meta_Role_Application {
	label="Moose::Meta::Role::Application";
	"Moose::Meta::Role::Application::meta";
}
subgraph cluster_Moose_Meta_Role_Application_ToClass {
	label="Moose::Meta::Role::Application::ToClass";
	"Moose::Meta::Role::Application::ToClass::meta";
}
"Class::MOP::Method::Inlined::can_be_inlined" -> "Scalar::Util::refaddr";
"Scalar::Util::BEGIN@10" -> "vars::BEGIN@8";
"Moose::Meta::TypeConstraint::Enum::meta" -> "Scalar::Util::blessed";
"Class::MOP::Attribute::attach_to_class" -> "Scalar::Util::blessed";
"Class::MOP::Class::clone_object" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Union::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::RoleSummation::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Composite::meta" -> "Scalar::Util::blessed";
"Class::MOP::class_of" -> "Scalar::Util::blessed";
"Class::MOP::Instance::BUILDARGS" -> "Scalar::Util::blessed";
"Moose::Meta::Class::add_attribute" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Role::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Method::Destructor::is_needed" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Parameterized::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeCoercion::Union::meta" -> "Scalar::Util::blessed";
"Class::MOP::Method::wrap" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Registry::add_type_constraint" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::ToClass::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Class::meta" -> "Scalar::Util::blessed";
"Moose::Util::TypeConstraints::find_type_constraint" -> "Scalar::Util::blessed";
"Moose::Meta::TypeCoercion::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Registry::meta" -> "Scalar::Util::blessed";
"Class::MOP::Method::Wrapped::wrap" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::meta" -> "Scalar::Util::blessed";
"Class::MOP::Object::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::ToRole::meta" -> "Scalar::Util::blessed";
"SimpleDB::Client::new" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::meta" -> "Scalar::Util::blessed";
"Moose::Util::TypeConstraints::_create_type_constraint" -> "Scalar::Util::blessed";
"Moose::Meta::Role::meta" -> "Scalar::Util::blessed";
"Class::MOP::Class::_clone_instance" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::HasMethods::get_method" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::DuckType::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Parameterizable::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::ToInstance::meta" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::HasMethods::add_method" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::HasAttributes::add_attribute" -> "Scalar::Util::blessed";
"Class::MOP::Method::Constructor::new" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Method::Required::meta" -> "Scalar::Util::blessed";
"Class::MOP::Method::Accessor::new" -> "Scalar::Util::blessed";
"Moose::BEGIN@11" -> "Scalar::Util::BEGIN@9";
"Scalar::Util::BEGIN@10" -> "vars::BEGIN@3";
"Class::MOP::Attribute::attach_to_class" -> "Scalar::Util::weaken";
"Class::MOP::Method::attach_to_class" -> "Scalar::Util::weaken";
"Class::MOP::Method::wrap" -> "Scalar::Util::weaken";
"Moose::Meta::Method::Constructor::new" -> "Scalar::Util::weaken";
"Class::MOP::Instance::new" -> "Scalar::Util::weaken";
"Moose::Meta::Method::Destructor::new" -> "Scalar::Util::weaken";
"Class::MOP::Method::Constructor::new" -> "Scalar::Util::weaken";
"Class::MOP::Method::Accessor::new" -> "Scalar::Util::weaken";
"Class::MOP::Method::Constructor::_generate_slot_initializer" -> "Scalar::Util::looks_like_number";
"List::MoreUtils::all" -> "Scalar::Util::reftype";
"Moose::Util::TypeConstraints::subtype" -> "Scalar::Util::reftype";
"Class::MOP::Method::wrap" -> "Scalar::Util::reftype";
"List::MoreUtils::any" -> "Scalar::Util::reftype";
"Sub::Install::_CODELIKE" -> "Scalar::Util::reftype";
"Class::MOP::Package::has_package_symbol" -> "Scalar::Util::reftype";
"Moose::BEGIN@11" -> "Scalar::Util::BEGIN@10";
"Scalar::Util::BEGIN@10" -> "vars::import";
"Scalar::Util::BEGIN@9" -> "strict::import";
"Scalar::Util::BEGIN@10" -> "vars::BEGIN@7";
}
