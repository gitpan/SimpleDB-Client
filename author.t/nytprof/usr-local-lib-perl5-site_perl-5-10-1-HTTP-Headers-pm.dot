digraph {
graph [overlap=false]
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_LWP_UserAgent {
	label="LWP::UserAgent";
	"LWP::UserAgent::default_header";
	"LWP::UserAgent::default_headers";
	"LWP::UserAgent::prepare_request";
	"LWP::UserAgent::BEGIN@10";
}
subgraph cluster_HTTP_Headers {
	label="HTTP::Headers";
	"HTTP::Headers::CORE:match";
	"HTTP::Headers::content_is_xhtml";
	"HTTP::Headers::header_field_names";
	"HTTP::Headers::CORE:substcont";
	"HTTP::Headers::CORE:sort";
	"HTTP::Headers::push_header";
	"HTTP::Headers::CORE:subst";
	"HTTP::Headers::BEGIN@4";
	"HTTP::Headers::BEGIN@3";
	"HTTP::Headers::_sorted_field_names";
	"HTTP::Headers::remove_header";
	"HTTP::Headers::init_header";
	"HTTP::Headers::content_length";
	"HTTP::Headers::new";
	"HTTP::Headers::scan";
	"HTTP::Headers::BEGIN@6";
	"HTTP::Headers::content_is_html";
	"HTTP::Headers::header";
	"HTTP::Headers::content_type";
	"HTTP::Headers::_header";
}
subgraph cluster_HTTP_Message {
	label="HTTP::Message";
	"HTTP::Message::__ANON__[HTTP/Message.pm:622]";
	"HTTP::Message::new";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_LWP_Protocol_http {
	label="LWP::Protocol::http";
	"LWP::Protocol::http::_fixup_header";
	"LWP::Protocol::http::request";
	"LWP::Protocol::http::__ANON__[LWP/Protocol/http.pm:167]";
}
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::content_type";
"HTTP::Headers::content_is_xhtml" -> "HTTP::Headers::content_type";
"HTTP::Headers::content_is_html" -> "HTTP::Headers::content_type";
"HTTP::Headers::_header" -> "HTTP::Headers::CORE:substcont";
"LWP::UserAgent::BEGIN@10" -> "HTTP::Headers::BEGIN@4";
"LWP::UserAgent::BEGIN@10" -> "HTTP::Headers::BEGIN@6";
"LWP::UserAgent::prepare_request" -> "HTTP::Headers::header_field_names";
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::content_is_xhtml";
"HTTP::Headers::content_is_html" -> "HTTP::Headers::content_is_xhtml";
"LWP::UserAgent::BEGIN@10" -> "HTTP::Headers::BEGIN@3";
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::content_length";
"HTTP::Headers::scan" -> "HTTP::Headers::CORE:match";
"HTTP::Headers::_header" -> "HTTP::Headers::CORE:match";
"HTTP::Headers::remove_header" -> "HTTP::Headers::CORE:match";
"HTTP::Headers::scan" -> "HTTP::Headers::_sorted_field_names";
"HTTP::Headers::header_field_names" -> "HTTP::Headers::_sorted_field_names";
"HTTP::Headers::scan" -> "LWP::Protocol::http::__ANON__[LWP/Protocol/http.pm:167]";
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::content_is_html";
"HTTP::Headers::content_type" -> "HTTP::Headers::CORE:subst";
"HTTP::Headers::_header" -> "HTTP::Headers::CORE:subst";
"LWP::Protocol::http::_fixup_header" -> "HTTP::Headers::init_header";
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::init_header";
"HTTP::Message::new" -> "HTTP::Headers::new";
"LWP::UserAgent::default_headers" -> "HTTP::Headers::new";
"LWP::Protocol::http::request" -> "HTTP::Headers::scan";
"LWP::UserAgent::default_header" -> "HTTP::Headers::header";
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::header";
"LWP::Protocol::http::request" -> "HTTP::Headers::header";
"LWP::UserAgent::prepare_request" -> "HTTP::Headers::header";
"HTTP::Headers::content_length" -> "HTTP::Headers::_header";
"HTTP::Headers::push_header" -> "HTTP::Headers::_header";
"HTTP::Headers::header" -> "HTTP::Headers::_header";
"HTTP::Headers::init_header" -> "HTTP::Headers::_header";
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::push_header";
"HTTP::Message::__ANON__[HTTP/Message.pm:622]" -> "HTTP::Headers::remove_header";
"HTTP::Headers::BEGIN@6" -> "vars::import";
"HTTP::Headers::_sorted_field_names" -> "HTTP::Headers::CORE:sort";
"HTTP::Headers::BEGIN@3" -> "strict::import";
}
